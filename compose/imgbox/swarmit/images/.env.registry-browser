# URL to logohost
# Set by: config/swarmit
export SWARMIT_LOGOHOST="${SWARMIT_LOGOHOST}"
# Define the image tag to set, when image names are calulcated
# Set by: config/swarmit
export SWARMIT_IMAGES_IMAGE_TAG="${SWARMIT_IMAGES_IMAGE_TAG}"
# Domain to set for deployment
# Set by: config/swarmit
export SWARMIT_INGRESS_BASE_DOMAIN="${SWARMIT_INGRESS_BASE_DOMAIN}"
# Enable cert creation using letsencrypt
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_ENABLE="True"
# Type of challenge you want to use for letsencrypt
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_CHALLENGE_TYPE="http-challenge"
# Provider to use for letsencrypt when using dns-challenge
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_PROVIDER=""
# DNS key to use for letsencrypt (will be stored as a secret)
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_KEY="secret"
# Name of environment key to expose as required by selected dns-challenge provider
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_ENV_NAME=""
# Sets 'defaultBeforeCheck' paraneter in Traefik for dns-challenge
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_CHALLENGE_DELAY="5"
# Sets 'insecureSkipVerify' paraneter in Traefik
# Set by: config/swarmit
export SWARMIT_INGRESS_SKIP_SSL_VERIFY="${SWARMIT_INGRESS_SKIP_SSL_VERIFY}"
# Loglevel for Traefik
# Set by: config/swarmit
export SWARMIT_INGRESS_LOG_LEVEL="ERROR"
# Define what will be the ingress incoming port
# Set by: config/swarmit
export SWARMIT_INGRESS_PORT="443"
# Name of this swarmit asset
# Set by: internally/imgbox
export SWARMIT_INFRA="${SWARMIT_INFRA}"
# Name of this swarmit asset
# Set by: internally/swarmit
export SWARMIT_BOX="swarmit"
# Name of this swarmit asset
# Set by: internally/images
export SWARMIT_STACK="images"
# URL to local registry
# Set by: service/registry-browser
export DOCKER_REGISTRY_URL="http://registry:5000/v2"
# base string to use, when creating secrets
# Set by: service/registry-browser
export SECRET_KEY_BASE="SECRET_KEY_BASE"
# Name of this swarmit asset
# Set by: internally/registry-browser
export SWARMIT_SERVICE="registry-browser"
# URL for this service asset
# Set by: internally/registry-browser
export SERVICE_INGRESS_URL="https://images.${SWARMIT_INGRESS_BASE_DOMAIN}"
# Domain part for this service asset
# Set by: internally/registry-browser
export SERVICE_INGRESS_DOMAIN="images.${SWARMIT_INGRESS_BASE_DOMAIN}"
# URL for this infra asset
# Set by: internally/imgbox
export INFRA_INGRESS_URL="https://${SWARMIT_INGRESS_BASE_DOMAIN}"
# Domain part for this infra asset
# Set by: internally/imgbox
export INFRA_INGRESS_DOMAIN=".${SWARMIT_INGRESS_BASE_DOMAIN}"
# URL to access locally provided registry
# Set by: internally/registry
export SWARMIT_IMAGES_REGISTRY_DOMAIN="registry.${SWARMIT_INGRESS_BASE_DOMAIN}"
# Define service url to use for your registry
# Set by: config/swarmit
export SWARMIT_IMAGES_REGISTRY_URL="${SWARMIT_IMAGES_REGISTRY_URL}"
# Email address to use for letsencrypt
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_EMAIL="mail@${SWARMIT_INGRESS_BASE_DOMAIN}"
# Mail-domain to set for deployment
# Set by: config/swarmit
export SWARMIT_INGRESS_MAIL_DOMAIN="${SWARMIT_INGRESS_MAIL_DOMAIN}"
# Domain to use for letsencrypt certs
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DOMAIN="${SWARMIT_INGRESS_BASE_DOMAIN}"
# This option allows to set a public version of the docker registry URL and will be used to show custom docker pull commands.
# Set by: service/registry-browser
export PUBLIC_REGISTRY_URL="${SWARMIT_IMAGES_REGISTRY_DOMAIN}"
